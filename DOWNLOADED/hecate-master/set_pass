#!/bin/bash

# desired new password
echo "Enter desired password: "
read TARGET_PASS

# move to working directory
cd info
echo "Starting password override..."

: '
Pulls local user lines from /etc/shadow and stores them in candidates.txt
:$6 represents a local user on the computer
however, we must isolate the user name (see line 29)
'
sudo grep -i ':$6' /etc/shadow > candidates.txt

# reads each line in the created candidates.txt
while read LINE
do
	# starting at the first character in each line,
	# iterate through until we reach the first colon
    for i in $(seq 1 ${#LINE})
    do
        at=${LINE:$i:1}
	# stops once $at = colon
        if [ $at = ":" ]
			  then
	# creates a substring from the beginning of the line
	# up to but NOT including the semicolon
		# this gives us only the username
	  	  			echo ${LINE:0:$i} >> users.txt
	  	  			break
		  fi
    done
done < candidates.txt

# reads users.txt and changes each of their passwords
while read user
do
	# only changes passwords if $user isn't current user
	# me is a file that contains the current user
	if [ $user != "root"] && [ $user != $(cat me) ]; then
   	echo "$user:$TARGET_PASS" | sudo -S chpasswd

		echo "$user 's password has been changed"
	
		# max password age to 30 days
		sudo passwd -x 30 $user

		# warn 7 days before password must be changed
		sudo passwd -w 7 $user

		# minimum days between password change,
		# 0 means they can change at any time
		sudo passwd -n 0 $user
	
		echo "Updated password age limits for $user."
	fi
done < users.txt

echo "Password override complete."

echo "Taking out the trash..."
echo "Removing candidates.txt"
rm -f candidates.txt
echo "Removing users.txt"
rm -f users.txt
echo "Trash taken out."
read -p "Press Enter to exit..." yn
